package factory;

import java.util.Random;
import java.util.UUID;

import enums.fish.FishRarity;
import enums.fish.FishType;
import model.Fish;
import model.Player;

public class FishFactory {

    private static final Random RANDOM = new Random();

    public Fish catchRandomFish() {
       
        double[] rodProbabilities = Player.getPlayer().getFishingRod().getRodType().getRodRarity().getProbabilities();
        Random random = new Random();


        double randValue = random.nextDouble();
        FishRarity rarity = null;
  
        double cumulativeProbability = 0.0;
        for (int i = 0; i < rodProbabilities.length; i++) {
            cumulativeProbability += rodProbabilities[i];
            if (randValue <= cumulativeProbability) {
            	rarity = FishRarity.values()[i]; 
            }
        }
        
        if (rarity == null) return null;
              
        FishType randomFish = FishType.getRandomFishByRarity(rarity);
        return randomFish;
    }
    
//    public Fish createFish() {
//        String name = 
//        String rarity = 
//        String id = UUID.randomUUID().toString(); 
//        String size = "XXL";
//        return new Fish(id, name, rarity, size, 0);  
//    }

}
