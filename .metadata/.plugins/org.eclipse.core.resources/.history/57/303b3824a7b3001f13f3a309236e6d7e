package model;

import factory.FishFactory;

public class Player {

    private String id;
    private String name;
    private String fishingRodId;
    private double money;

    public static Player player = null;

    public static Player getPlayer(){
        if (player == null){
            player = new Player("1","Darren",100,"1");
        }
        return player;
    }

    private Player(String id, String name, double money, String fishingRodId) {
        this.id = id;
        this.name = name;
        this.money = money;
        this.fishingRodId = fishingRodId;
    }

    public String getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getFishingRodId() {
        return fishingRodId;
    }

    public double getMoney() {
        return money;
    }

    public void setId(String id) {
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setFishingRodId(String fishingRodId) {
        this.fishingRodId = fishingRodId;
    }

    public void setMoney(double money) {
        this.money = money;
    }

    public Fish catchFish() {
        FishFactory fishFactory = new FishFactory();
        return fishFactory.createFish();
    }

    //  public void sellFish(String fishId) {
    //     Fish fishToSell = inventory.getFishById(fishId);
    //     if (fishToSell != null && inventory.removeFish(fishId)) {
    //         this.money += fishToSell.getPrice(); 
    //     } else {
    //         throw new IllegalArgumentException("Fish not found or already sold!");
    //     }
    // }

}
